
# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT
{
    "llm_config": {
        "model_name": "gpt-4o",
    },
    "max_iterations": 40000,
    "max_execution_seconds": 6000,
    "commondefs": {
        "replacement_strings": {
            "instructions_prefix": """
            You are an assistant helping with the process of building an agent network.
            Only answer inquiries that are directly within your area of expertise.
            Do not try to help for other matters.
            Do not mention what you can NOT do. Only mention what you can do.
            """,
        },
    },
    "tools": [
        {
            "name": "agent_network_designer",
            "function": {
                "description": "I can help you create an agent network."
            },
            "instructions": """
{instructions_prefix}
You are responsible for designing and modifying agent networks based on user requirements.
Take the following steps. Make sure you don't miss any details and follow the steps carefully.
1) take in the name of a company or organization, or the description of a domain, and generate an agent network definition for an organization mirroring
relevant workflows and responsible nodes. Call your network_generator tool for this one time.  Make sure the name of the agent network is camelcase.

2) Once the agent network definition is generated, call the instruction_refiner tool one time.

3) Next, get 3-4 sample queries for the generated agent network by calling your query_generator tool.

4) Once all is done, call the produce_agent_network_hocon tool one time to generate the hocon and return the exact full agent network definition hocon, along with the 3-4 sample queries as example usage.
            """,
            "allow": {
                "to_upstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork", "agent_name"]
                }
            },
           "tools": ["network_generator", "query_generator", "instruction_refiner", "produce_agent_network_hocon"]
        },
        {
            "name": "produce_agent_network_hocon",
            "function": {
                "description": "Generate the complete hocon definition for an agent network and return it verbatim."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_name": {
                            "type": "string",
                            "description": "name of project, business or company or other description, write it in snake case, e.g. foo_bar."
                        },
                    },
                    "required": ["agent_network_name"]
                }
            },
            "class": "get_agent_network_hocon.GetAgentNetworkHocon"
        },
        {
            "name": "network_generator",
            "function": {
                "description": "I can help you create an agent network definition."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_description": {
                            "type": "string",
                            "description": "description of project, business or company."
                        },
                    },
                    "required": ["agent_network_description"]
                }
            },
            "instructions": """
{instructions_prefix}
You generate a complete agent network based on given specifications.
Use your add_agent tool to create the agent network.
Take in the name of a company or organization, or the description of a domain, and generate an organization mirroring
relevant workflows and responsible nodes.

The way to think about this is as creating a hierarchical graph of the responsible employees or team members in such a system.
List all the responsible individuals that handle the various workflows that make this happen, along with a short 1-2 line
job description.

For example, for a telco's B2B business as well as support line, you may create the system below.
The network will be a DAG.

Do not add anything about other agents within the instructions of an agent.
Make sure there are no cycles.

add_agent("customer_support_rep", "You are the top-level agent responsible for handling all inquiries for a telco with a B2B business. When interacting with the user, act as the single point of interaction. No need to mention the other tools or agents. If there are any requirements that need user input, ask them one at a time, with clear examples of the choices available.", "network_engineer, account_manager")
add_agent("network_engineer", "You handle technical aspects of configuring and troubleshooting ethernet and optical networks at different locations for a telco with a B2B business. You configures and maintain network infrastructure and provide technical support when issues arise.", "network_ops_center_specialist, field_technician")
add_agent("field_technician", "You are responsible for onsite installation, maintenance, and troubleshooting of network equipment at customer locations for a telco with a B2B business. You Execute hands-on technical work at customer premises and coordinates with the engineer to ensure networks are functional.", "logistics_coordinator")
add_agent("network_ops_center_specialist", "You monitor network health, respond to alerts, and initiate troubleshooting remotely for a telco with a B2B business. You Provide round-the-clock monitoring and first-line response to network performance issues.", "")
add_agent("project_manager", "You oversee complex network installation or upgrade projects involving multiple locations, ensuring they stay on track. You coordinates larger, cross-location projects and manage timelines, resources, and milestones.", "logistics_coordinator")
add_agent("account_manager", "You manages the business relationship with the customer, addressing their needs, and ensuring ongoing satisfaction. You act as the main point of contact for clients post-sale, ensuring that the services meet their business needs.", "")
add_agent("logistics_coordinator", "You manage the shipment and delivery of network equipment to various locations, ensuring timely arrival for installations. You coordinates the physical logistics of hardware and tools required for installation or maintenance.", "")

Make sure your design has no cycles. Make sure you have leaf nodes with no link back to up-chain agents so we keep this as a DAG.
Also note, there should only be one top agent.
Make agents granular so that you have at least a depth of three agents from the top for some chains.
            """,
            "command": "Call to generate an agent network definition.",
            "tools": ["add_agent_to_network"]
        },
        {
            "name": "add_agent_to_network",
            "function": {
                "description": "Adds an agent to an agent network."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_name": {
                            "type": "string",
                            "description": "the name of the agent being added."
                        },
                        "instructions": {
                            "type": "string",
                            "description": "the instructions for the agent."
                        },
                        "down_chains": {
                            "type": "string",
                            "description": "comma separated list of the names of agents down-chain to this one."
                        },
                        "top_agent": {
                            "type": "string",
                            "description": "'true' is this is a top agent."
                        },
                    },
                    "required": ["agent_name", "instructions"]
                }
            },
            "class": "add_agent.AddAgent"
        },
        {
            "name": "query_generator",
            "function": {
                "description": "I can generate some sample queries given an agent network definition."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_description": {
                            "type": "string",
                            "description": "name of project, business or company or other description."
                        },
                    },
                }
            },
            "instructions": """
{instructions_prefix}
You generate example queries that the created agent network can handle.
First get the agent network using your agent network tool.
Ensure the queries align with the agents' capabilities.
Provide a diverse range of queries to illustrate the network's functions.
The queries should show how multiple sub networks might contribute to a consolidated response from the top agent.
Just give the enumerated sample queries. Try to keep the queries simple and natural.
Make some of the examples transactional. If not stated, return no more than 3-4 examples.
            """,
            "command": "Call to generate sample queries for an agent network definition."
            "tools": ["get_agent_network_tool"]
        },
        {
            "name": "get_agent_network_tool",
            "function": {
                "description": "Get the agent network definition."
            },
            "class": "get_agent_network.GetAgentNetwork"
        },
        {
            "name": "instruction_refiner",
            "function": {
                "description": "I can refine the instructions for a given agent in an agent network definition."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_network_description": {
                            "type": "string",
                            "description": "name of project, business or company or other description."
                        },
                    },
                }
            },
            "instructions": """
{instructions_prefix}
First get the full agent network definition using your get_agent_network_tool.
Then iterate on all the agents one by one and refine and expand the instructions for each agent in the network and use your set_agent_instructions_tool tool for each agent's newly refined instructions to make sure they are saved.
Ensure the instructions are clear, comprehensive, detailed, and specific to the agent's function.
Provide context to improve the agent's effectiveness.
Give a detailed and step-by-step description for what the given agent does given its scope of responsibilities.
Make sure you only specify what concerns this particular agent, and not its up-chain or down-chains. The description
should be specific to this agent. No need to mention anything about other agents or what they do.
Make sure it is in-line with the company's cultural values and business objectives.
Do not format your response and keep it as plain text with no other formatting characters.
Wrap the lines at around 120 characters. Write it as if you are telling the agent.
            """,
            "command": "Call to refine instructions of an agent."
            "tools": ["get_agent_network_tool", "set_agent_instructions_tool"]
        }
        {
            "name": "set_agent_instructions_tool",
            "function": {
                "description": "Set the instructions for an agent in an agent network."
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_name": {
                            "type": "string",
                            "description": "the name of the agent being added."
                        },
                        "instructions": {
                            "type": "string",
                            "description": "the instructions for the agent."
                        },
                    },
                    "required": ["agent_name", "instructions"]
                }
            },
            "class": "set_agent_instructions.SetAgentInstructions"
        },
    ]
}
