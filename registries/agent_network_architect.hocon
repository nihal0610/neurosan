# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT

# This agent network performs the following actions:
    # 1. Calls "agent_network_designer" as an external agent to generate a .hocon configuration file.
    # 2. Uses the "agent_network_html_generator" tool (from the toolbox) to create an HTML visualization of the network.
    # 3. Demonstrates how the generated network works by calling the coded tool "NsflowSelenium".
    # 4. Sends an email with the .hocon and HTML files attached using the "send_gmail_hocon_html" coded tool.
    #
    # Requirements:
    # - neuro-san>=0.5.38
    # - Install Gmail support:
    #     pip install -U langchain-google-community\[gmail\]
    # - Set up Gmail API credentials:
    #     Follow the instructions at
    #     https://developers.google.com/workspace/gmail/api/quickstart/python#authorize_credentials_for_a_desktop_application
    #     Then download the `credentials.json` file and place it at the top level of this repo.
    # - Install Selenium and WebDriver Manager:
    #     pip install selenium webdriver-manager
    # - Install Chrome browser
    #
    # Additional setup for running the "NsflowSelenium" coded tool:
    # - Start the nsflow service in a separate terminal.
    # - Use non-default ports for the neuro-san gRPC, HTTP, and nsflow servers.
    #   The default ports are 30011 for gRPC, 8080 for HTTP, and 4173 for nsflow.
    #   For example, you can run:
    #     python -m run --server-grpc-port 30012 --server-http-port 8081 --nsflow-port 4174

{
    "llm_config": {
        "model_name": "gpt-4o",
    },
    "max_execution_seconds": 6000,
    "tools": [
        {
            "name": "Agent Network Architect",
            "function": {
                description = "Designs a multi-agent network and can email the configuration HOCON file to specified recipients."
            },
            "instructions": """
You are a helpful assistant that supports users in building agent networks.

Only respond to inquiries that are directly related to your area of expertise—agent network design and configuration. Do not attempt to assist with unrelated matters. Avoid mentioning what you cannot do; focus only on what you can do.

Begin by asking for the name of a company, organization, or a description of the target domain. This context will be used to guide the network design.

Always use the '/agent_network_designer' tool to generate the agent network configuration (in HOCON format) after receiving the required input.

After you receive the response from '/agent_network_designer':
1. Extract the agent network name from the sentence:  
   'You are part of a <agent_network_name> of assistants.'  
   **Do not include or repeat this sentence in your reply to the user.**
2. The generated configuration file will always be located at:  
   `registries/<agent_network_name>.hocon`  
   Mention this file path clearly to the user.
3. Always include **Sample Queries** in your reply. 
4. Immediately after receiving the designer response, call the 'agent_network_html_generator' tool to create a visual graph of the agent network.

When answering questions about the agent network, only use information provided in the tool response. Do not invent or infer additional details beyond what the tool has returned.

If the user asks you to test the agent network, use the 'agent_network_tester' tool, and if no specific query is specified, use one from the **Sample Queries**.
ALWAYS include the following two things in your reply:
1. The exact test query you sent to the network.
2. The response you received from the network.

Do not summarize. Show both clearly and completely.

If the user requests it, use the 'gmail_handler_with_attachment' tool to email the generated files to a specified email address.  
**Always attach both** the `.hocon` configuration file and the HTML graph file to the email.

Always ask for clarification if the user's intent is ambiguous.
""",
            "allow": {
                "to_upstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork", "agent_name"]
                },
                "from_downstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork", "agent_name"]
                },
                "to_downstream": {
                    "sly_data": ["AutomaticallyDesignedAgentNetwork", "agent_name"]
                }
            },
            "tools": ["/agent_network_designer", "agent_network_html_generator", "agent_network_tester", "email_sender"]
        },

        {
            "name": "agent_network_html_generator",
            # Generates an HTML file for the specified "agent_name". Falls back to sly_data if the HOCON file is missing or invalid.
            "toolbox": "agent_network_html_generator"
        },

        {
            "name": "agent_network_tester",
            # Run NSFlow for the specified "agent_name" with the given "query". Falls back to using "agent_name" from sly_data if no valid HOCON file is found.
            "class": "nsflow_selenium.NsflowSelenium"
            "function": {
                "description": "Test the agent network by sending it a test or sample query.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_name": {
                            "type": string,
                            "description": "Name of the agent to test"
                        },
                        "query": {
                            "type": "string",
                            "description": "Query for the test"
                        }
                    },
                    "required": ["agent_name", "query"]
                }
            },
            "args": {
                # User-defined arguments for the tool

                # --- Required Argument ---

                # URL for connecting to nsflow
                "url": "http://localhost:4174",

                # --- Optional Arguments ---

                # Time in second for selenium to wait for each element to load or appear (default is 120 seconds)
                "time_to_find_element": 120.0,

                # Time in second to wait before clicking send after the text input (default is 2 seconds)
                "time_before_click_send": 2.0,

                # Time in second before closing the browser after the agent responses (default is 10 second)
                "time_after_response_before_close": 10.0
            }
        },

        {
            "name": "email_sender",
            # "send_gmail_hocon_html" is a coded tool that send email with attachment.
            # This tool is mainlly designed for sending an email with hocon and html as attachment since it will fallback
            # to sending the hocon and html file of the agent network if the attachment provided in args is invalid.
            # The code of this tool can be found at coded_tools/agent_network_architect/send_gmail_hocon_html.py
            "class": "send_gmail_hocon_html.SendGmailHoconHtml"
            "function": {
                "description": "Send an email to specified email addresses",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "to": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of recipient email addresses"
                        },
                        "attachment_paths": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of absolute paths of the attached files"
                        },
                        "cc": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of CC email addresses"
                        },
                        "bcc": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of BCC email addresses"
                        },
                        "subject": {
                            "type": "string",
                            "description": "Subject of the email"
                        },
                        "message": {
                            "type": "string",
                            "description": "Message or body of the email"
                        }
                    },
                    "required": ["to", "attachment_paths"]
                }
            }
            "args": {

                # Set "html" to true to send message as html.
                "html": true,

                # Set template for the message
                "message": """
<html>
    <p>Hi,</p>

    <p>Thank you for connecting with Cognizant at the <strong>Newsweek AI Impact Summit in Sonoma, CA</strong>!</p>

    <p>We’re excited to share your custom-built <strong>Generative AI Multi-Agent Network</strong>, developed live at the event using our cutting-edge <em>Neuro AI</em> platform. Attached, you’ll find:</p>

    <ul>
      <li>
        An interactive <strong>HTML visualization</strong> of your agent network—just open it in any browser to explore how each agent functions by simply moving your mouse over nodes in the graph to view detailed settings.
      </li>
      <li>
        A <code>.hocon</code> configuration file containing the full technical specs of your setup.
      </li>
    </ul>

    <h3>Get Started in Minutes</h3>

    <p>To bring your network to life on your local machine:</p>

    <ol>
      <li>Download the Neuro AI Multi-Agent Accelerator from the <a href="https://github.com/cognizant-ai-lab/neuro-san-studio" target="_blank">GitHub repo</a>.</li>
      <li>Follow the README to complete installation.</li>
      <li>Drop your <code>.hocon</code> file into the <code>registries</code> folder and register it in the <code>manifest.hocon</code>.</li>
      <li>Customize your network by editing the <code>.hocon</code> file in any text editor.</li>
    </ol>

    <p><strong>Note:</strong> To activate LLM capabilities, you’ll need an API key from OpenAI, Anthropic, or Azure OpenAI. We use <strong>Ollama</strong> for local LLM orchestration.</p>

    <h3>Need Help or Want to Learn More?</h3>

    <p>We’re here to support your Gen AI journey. Reach out to us anytime for guidance, demos, or to explore deeper integration possibilities.</p>

    <p>Best regards,<br>
    <strong>The Cognizant AI Team</strong></p>
  </body>
</html>
                """
            }
        }
    ]
}
